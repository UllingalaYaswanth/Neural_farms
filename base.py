import base64

# Sample base64 string (usually much longer in real use)
base64_image = ""  # Truncated for example

# If the base64 string includes metadata prefix, strip it
# e.g., 'data:image/png;base64,...'
if base64_image.startswith('data:image'):
    base64_image = base64_image.split(',')[1]

# Decode the base64 string
image_data = base64.b64decode(base64_image)

# Write the binary data to a file
with open("output_image.png", "wb") as f:
    f.write(image_data)

print("Image saved as output_image.png")
